INSTRUCTION          |IF_LATCH_EN|DEC_OUTREG_EN|IS_I_TYPE|RD1_EN|RD2_EN|ZERO_PADDING2|MUXA_SEL|MUXB_SEL|EXE_OUTREG_EN|EQ_COND|JUMP_EN|PC_LATCH_EN|MEM_OUTREG_EN|ZERO_PADDING4|MEM_OUT_SEL|DRAM_WE|BYTE_LEN|WB_MUX_SEL|JAL_MUX_SEL|RF_WR_EN|WB_LATCH_EN |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------| 
NOP                  |     0     |      0      |    0    |   0  |  0   |      0      |    0   |    0   |      0      |   0   |   0   |     0     |      0      |     0       |      0    |   0   |   00   |     0    |       0   |    0   |       0    |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
J                    |     1     |      1      |    0    |   0  |  0   |      0      |    0   |    1   |      1      |   1   |   1   |     1     |      1      |     0       |      0    |   0   |   00   |     0    |       0   |    0   |       0    | Comments: With the RD1 = 0 produces A = 0 and so the jump will be taken (set the condition checker to check if A is 0). MUXA_SEL has to be 0 and MUXB_SEL 1. ALUOPCODE: ADDUI or ADD or ADDI or ADDU
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|                     
JAL                  |     1     |      1      |    0    |   0  |  0   |      0      |    0   |    1   |      1      |   1   |   1   |     1     |      1      |     0       |      0    |   0   |   00   |     1    |       1   |    1   |       1    | Comments: With the RD1 = 0 produces A = 0 and so the jump will be taken (set the condition checker to check if A is 0). MUXA_SEL has to be 0 and MUXB_SEL 1. Need to enable writing the RF and write the value of NPC. ALUOPCODE: ADDUI or ADD or ADDI or ADDU
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|                     
BEQZ                 |     1     |      1      |    1    |   1  |  0   |      0      |    0   |    1   |      1      |   1   |   1   |     1     |      1      |     0       |      0    |   0   |   00   |     0    |       0   |    0   |       0    | Comments: Needs to read port A to decide if jump or not.MUXA_SEL has to be 0 (select NPC) and MUXB_SEL 1 (SELEC IMM). Although it is not an I type, it needs IS_I_TYPE = 1 to do sign extension of 16 bits immediate. ALUOPCODE: ADDUI or ADD or ADDI or ADDU
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|                     
BNEZ                 |     1     |      1      |    1    |   1  |  0   |      0      |    0   |    1   |      1      |   0   |   1   |     1     |      1      |     0       |      0    |   0   |   00   |     0    |       0   |    0   |       0    | Comments: Needs to read port A to decide if jump or not.MUXA_SEL has to be 0 (select NPC) and MUXB_SEL 1 (SELEC IMM). Although it is not an I type, it needs IS_I_TYPE = 1 to do sign extension of 16 bits immediate EQ_COND = 0 to jump if not zero. ALUOPCODE: ADDUI or ADD or ADDI or ADDU
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|                     
ADDI                 |     1     |      1      |    1    |   1  |  0   |      0      |    1   |    1   |      1      |   0   |   0   |     1     |      1      |     0       |      0    |   0   |   00   |     0    |       0   |    1   |       1    | Comments: to select ALU out, the last mux needs "00" in the selection signal. ALU OPCODE: ADDI
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|                      
ADDUI                |     1     |      1      |    1    |   1  |  0   |      1      |    1   |    1   |      1      |   0   |   0   |     1     |      1      |     0       |      0    |   0   |   00   |     0    |       0   |    1   |       1    | Comments: to select ALU out, the last mux needs "00" in the selection signal. Zero padding in decode stage to don't extend sign (unsigned immediate). ALU OPCODE: ADDUI
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|                     
SUBI                 |     1     |      1      |    1    |   1  |  0   |      0      |    1   |    1   |      1      |   0   |   0   |     1     |      1      |     0       |      0    |   0   |   00   |     0    |       0   |    1   |       1    | Comments: Same as ADDI (the only thing that changes is the ALU OPCODE). ALU OPCODE: SUBI
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|                     
SUBUI                |     1     |      1      |    1    |   1  |  0   |      1      |    1   |    1   |      1      |   0   |   0   |     1     |      1      |     0       |      0    |   0   |   00   |     0    |       0   |    1   |       1    | Comments: Same as ADDUI (the only thing that changes is the ALU OPCODE). ALU OPCODE: SUBUI
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|                     
ANDI                 |     1     |      1      |    1    |   1  |  0   |      0      |    1   |    1   |      1      |   0   |   0   |     1     |      1      |     0       |      0    |   0   |   00   |     0    |       0   |    1   |       1    | Comments: Same as ADDI (the only thing that changes is the ALU OPCODE). ALU OPCODE: ANDI
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|                     
ORI                  |     1     |      1      |    1    |   1  |  0   |      0      |    1   |    1   |      1      |   0   |   0   |     1     |      1      |     0       |      0    |   0   |   00   |     0    |       0   |    1   |       1    | Comments: Same as ADDI (the only thing that changes is the ALU OPCODE). ALU OPCODE: ORI
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|                     
XORI                 |     1     |      1      |    1    |   1  |  0   |      0      |    1   |    1   |      1      |   0   |   0   |     1     |      1      |     0       |      0    |   0   |   00   |     0    |       0   |    1   |       1    | Comments: Same as ADDI (the only thing that changes is the ALU OPCODE). ALU OPCODE: XORI
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|                     
LHI                  |     1     |      1      |    1    |   1  |  0   |      1      |    1   |    1   |      1      |   0   |   0   |     1     |      1      |     0       |      0    |   0   |   00   |     0    |       0   |    1   |       1    | Comments: Same as ADDI (the only thing that changes is the ALU OPCODE). ALU OPCODE: I_LHI
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|                     
JR                   |     1     |      1      |    0    |   0  |  1   |      0      |    1   |    0   |      1      |   1   |   1   |     1     |      1      |     0       |      0    |   0   |   00   |     0    |       0   |    0   |       0    | Comments: With the RD1 = 0 produces A = 0 and so the jump will be taken (set the condition checker to check if A is 0). MUXA_SEL has to be 1 (Choose that is Reg A = 0 and add it with Reg B) and MUXB_SEL 0 (to select Reg B). Reg A + Reg B = Reg B (new PC value = Reg B). ALU OPCODE: ADD, ADDI, ADDU, ADDUI
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|                                                                                                                                                                                                                                                                                                     
JALR                 |     1     |      1      |    0    |   0  |  1   |      0      |    1   |    0   |      1      |   1   |   1   |     1     |      1      |     0       |      0    |   0   |   00   |     0    |       1   |    1   |       1    | Comments: same as JR but changing the last stages (MEM and WB) to write the value of NPC in R31. ALU OPCODE: ADD, ADDI, ADDU, ADDUI
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|                                        
SLLI                 |     1     |      1      |    1    |   1  |  0   |      1      |    1   |    1   |      1      |   0   |   0   |     1     |      1      |     0       |      0    |   0   |   00   |     0    |       0   |    1   |       1    | Comments: Same as ADDUI, only changes the ALUOPCODE. to select ALU out, the last mux needs "00" in the selection signal. Zero padding in decode stage to don't extend sign (unsigned immediate) ALU OPCODE: LOGICAL SHIFT LEFT
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|                                        
SRLI                 |     1     |      1      |    1    |   1  |  0   |      1      |    1   |    1   |      1      |   0   |   0   |     1     |      1      |     0       |      0    |   0   |   00   |     0    |       0   |    1   |       1    | Comments: Exactly the same as SLLI but changing ALU OPCODE. ALU OPCODE: LOGICAL SHIFT RIGHT
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|                     
SRAI                 |     1     |      1      |    1    |   1  |  0   |      1      |    1   |    1   |      1      |   0   |   0   |     1     |      1      |     0       |      0    |   0   |   00   |     0    |       0   |    1   |       1    | Comments: Exactly the same as SLLI but changing ALU OPCODE. ALU OPCODE: ARITH SHIFT LEFT
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|                     
SEQI                 |     1     |      1      |    1    |   1  |  0   |      0      |    1   |    1   |      1      |   0   |   0   |     1     |      1      |     0       |      0    |   0   |   00   |     0    |       0   |    1   |       1    | Comments: same as ADDI (Imm has to be signed) but changing the ALU OPCODE: EQ
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|                     
SNEI                 |     1     |      1      |    1    |   1  |  0   |      0      |    1   |    1   |      1      |   0   |   0   |     1     |      1      |     0       |      0    |   0   |   00   |     0    |       0   |    1   |       1    | Comments: same as SEQI but changing ALU OPCODE: NOT EQ
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|                     
SLTI                 |     1     |      1      |    1    |   1  |  0   |      0      |    1   |    1   |      1      |   0   |   0   |     1     |      1      |     0       |      0    |   0   |   00   |     0    |       0   |    1   |       1    | Comments: same as SEQI but changing ALU OPCODE: LESS THAN
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|                     
SGTI                 |     1     |      1      |    1    |   1  |  0   |      0      |    1   |    1   |      1      |   0   |   0   |     1     |      1      |     0       |      0    |   0   |   00   |     0    |       0   |    1   |       1    | Comments: same as SEQI but changing ALU OPCODE: GREATER THAN
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|                     
SLEI                 |     1     |      1      |    1    |   1  |  0   |      0      |    1   |    1   |      1      |   0   |   0   |     1     |      1      |     0       |      0    |   0   |   00   |     0    |       0   |    1   |       1    | Comments: same as SEQI but changing ALU OPCODE: LESS EQ THAN
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|                     
SGEI                 |     1     |      1      |    1    |   1  |  0   |      0      |    1   |    1   |      1      |   0   |   0   |     1     |      1      |     0       |      0    |   0   |   00   |     0    |       0   |    1   |       1    | Comments: same as SEQI but changing ALU OPCODE: GREATER EQ THAN
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|                     
INSTRUCTION          |IF_LATCH_EN|DEC_OUTREG_EN|IS_I_TYPE|RD1_EN|RD2_EN|ZERO_PADDING2|MUXA_SEL|MUXB_SEL|EXE_OUTREG_EN|EQ_COND|JUMP_EN|PC_LATCH_EN|MEM_OUTREG_EN|ZERO_PADDING4|MEM_OUT_SEL|DRAM_WE|BYTE_LEN|WB_MUX_SEL|JAL_MUX_SEL|RF_WR_EN|WB_LATCH_EN |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------| 
LB                   |     1     |      1      |    1    |   1  |  0   |      0      |    1   |    1   |      1      |   0   |   0   |     1     |      1      |     0       |      0    |   0   |   00   |     1    |       0   |    1   |       1    | Comments: Imm16 is SIGNED (need signed extension in Decode stage). The byte read from memory has to be sign extended. (mem out sel = 0 to select output of sign extesion module). Byte len = "00" to extend byte and read byte from mem. ALU OPCODE: ADDI
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|                     
LH                   |     1     |      1      |    1    |   1  |  0   |      0      |    1   |    1   |      1      |   0   |   0   |     1     |      1      |     0       |      0    |   0   |   01   |     1    |       0   |    1   |       1    | Comments: Same as LB but BYTE_LEN = "01". ALU OPCODE: ADDI
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|                     
LW                   |     1     |      1      |    1    |   1  |  0   |      0      |    1   |    1   |      1      |   0   |   0   |     1     |      1      |     0       |      1    |   0   |   11   |     1    |       0   |    1   |       1    | Comments: Same as LB but no sign extension (MEM_OUT_SEL = 1) and BYTE_LEN = "11". ALU OPCODE: ADDI
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|                     
LBU                  |     1     |      1      |    1    |   1  |  0   |      0      |    1   |    1   |      1      |   0   |   0   |     1     |      1      |     1       |      0    |   0   |   00   |     1    |       0   |    1   |       1    | Comments: Same as LB but the byte read from memory is no sign extended (only zeroed) -> ZERO_PADDING4 = 0. ALU OPCODE: ADDI
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|                     
LHU                  |     1     |      1      |    1    |   1  |  0   |      0      |    1   |    1   |      1      |   0   |   0   |     1     |      1      |     1       |      0    |   0   |   01   |     1    |       0   |    1   |       1    | Comments: Same as LH but the half word read from memory is no sign extended (only zeroed) -> ZERO_PADDING4 = 0. ALU OPCODE: ADDI
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|                     
SB                   |     1     |      1      |    1    |   1  |  1   |      0      |    1   |    1   |      1      |   0   |   0   |     1     |      1      |     0       |      0    |   1   |   00   |     0    |       0   |    0   |       0    | Comments: Same as LB but it doesn't have any write back value, so registers are just desable in this stage, also needs to read also reg B from RF and WE of memory = 1.. It is expected that memory is in charge of only reading the LS byte of the regsiter B. ALU OPCODE: ADDI
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|                     
SH                   |     1     |      1      |    1    |   1  |  1   |      0      |    1   |    1   |      1      |   0   |   0   |     1     |      1      |     0       |      0    |   1   |   01   |     0    |       0   |    0   |       0    | Comments: Same as SB but BYTE_LEN = 01. ALU OPCODE: ADDI
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|                     
SW                   |     1     |      1      |    1    |   1  |  1   |      0      |    1   |    1   |      1      |   0   |   0   |     1     |      1      |     0       |      0    |   1   |   11   |     0    |       0   |    0   |       0    | Comments: Same as SB but BYTE_LEN = 11. ALU OPCODE: ADDI
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|                     
SLTUI                |     1     |      1      |    1    |   1  |  0   |      1      |    1   |    1   |      1      |   0   |   0   |     1     |      1      |     0       |      0    |   0   |   00   |     0    |       0   |    1   |       1    | Comments: same as SLTI but Imm16 is unsigned. ALU OPCODE: Less than
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|                     
SGTUI                |     1     |      1      |    1    |   1  |  0   |      1      |    1   |    1   |      1      |   0   |   0   |     1     |      1      |     0       |      0    |   0   |   00   |     0    |       0   |    1   |       1    | Comments: same as SGTI but Imm16 is unsigned. ALU OPCODE: Greater than
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|                     
SLEUI                |     1     |      1      |    1    |   1  |  0   |      1      |    1   |    1   |      1      |   0   |   0   |     1     |      1      |     0       |      0    |   0   |   00   |     0    |       0   |    1   |       1    | Comments: same as SLEI but Imm16 is unsigned. ALU OPCODE: Less eq than
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|                     
SGEUI                |     1     |      1      |    1    |   1  |  0   |      1      |    1   |    1   |      1      |   0   |   0   |     1     |      1      |     0       |      0    |   0   |   00   |     0    |       0   |    1   |       1    | Comments: same as SGEI but Imm16 is unsigned. ALU OPCODE: Greater eq than
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|                     
SLL                  |     1     |      1      |    0    |   1  |  1   |      0      |    1   |    0   |      1      |   0   |   0   |     1     |      1      |     0       |      0    |   0   |   00   |     0    |       0   |    1   |       1    | Comments: MUXA_SEL = 1 to select reg A and MUXB_SEL = 0 to select reg B. to select ALU out, the last mux needs "00" in the selection signal. ALU OPCODE: LEFT LOGICAL SHIFT
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|                     
SRL                  |     1     |      1      |    0    |   1  |  1   |      0      |    1   |    0   |      1      |   0   |   0   |     1     |      1      |     0       |      0    |   0   |   00   |     0    |       0   |    1   |       1    | Comments: same as SLL but changing ALU OPCODE: RIGHT LOGICAL SHIFT
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|                     
SRA                  |     1     |      1      |    0    |   1  |  1   |      0      |    1   |    0   |      1      |   0   |   0   |     1     |      1      |     0       |      0    |   0   |   00   |     0    |       0   |    1   |       1    | Comments: same as SLL but changing ALU OPCODE: ARITH SHIFT
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|                     
ADD                  |     1     |      1      |    0    |   1  |  1   |      0      |    1   |    0   |      1      |   0   |   0   |     1     |      1      |     0       |      0    |   0   |   00   |     0    |       0   |    1   |       1    | Comments: MUXA_SEL = 1 to select reg A and MUXB_SEL = 0 to select reg B. to select ALU out, the last mux needs "00" in the selection signal. ALU OPCODE: ADD
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|                      
ADDU                 |     1     |      1      |    0    |   1  |  1   |      0      |    1   |    0   |      1      |   0   |   0   |     1     |      1      |     0       |      0    |   0   |   00   |     0    |       0   |    1   |       1    | Comments: Exactly the same as ADD. ALU OPCODE: ADDU
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|                     
SUB                  |     1     |      1      |    0    |   1  |  1   |      0      |    1   |    0   |      1      |   0   |   0   |     1     |      1      |     0       |      0    |   0   |   00   |     0    |       0   |    1   |       1    | Comments: same as ADD but changing ALU OPCODE: SUB
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|                     
SUBU                 |     1     |      1      |    0    |   1  |  1   |      0      |    1   |    0   |      1      |   0   |   0   |     1     |      1      |     0       |      0    |   0   |   00   |     0    |       0   |    1   |       1    | Comments: Exactly the same as SUB. ALU OPCODE: SUBU
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|                     
AND                  |     1     |      1      |    0    |   1  |  1   |      0      |    1   |    0   |      1      |   0   |   0   |     1     |      1      |     0       |      0    |   0   |   00   |     0    |       0   |    1   |       1    | Comments: Same as ADD. ALU OPCODE: AND
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|                     
OR                   |     1     |      1      |    0    |   1  |  1   |      0      |    1   |    0   |      1      |   0   |   0   |     1     |      1      |     0       |      0    |   0   |   00   |     0    |       0   |    1   |       1    | Comments: Same as ADD. ALU OPCODE: OR
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
XOR                  |     1     |      1      |    0    |   1  |  1   |      0      |    1   |    0   |      1      |   0   |   0   |     1     |      1      |     0       |      0    |   0   |   00   |     0    |       0   |    1   |       1    | Comments: Same as ADD. ALU OPCODE: XOR
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
SEQ                  |     1     |      1      |    0    |   1  |  1   |      0      |    1   |    0   |      1      |   0   |   0   |     1     |      1      |     0       |      0    |   0   |   00   |     0    |       0   |    1   |       1    | Comments: Same as ADD but changing ALU OPCODE. ALU OPCODE: EQUAL
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
SNE                  |     1     |      1      |    0    |   1  |  1   |      0      |    1   |    0   |      1      |   0   |   0   |     1     |      1      |     0       |      0    |   0   |   00   |     0    |       0   |    1   |       1    | Comments: Same as ADD but changing ALU OPCODE. ALU OPCODE: NOT EQUAL
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
SLT                  |     1     |      1      |    0    |   1  |  1   |      0      |    1   |    0   |      1      |   0   |   0   |     1     |      1      |     0       |      0    |   0   |   00   |     0    |       0   |    1   |       1    | Comments: Same as ADD but changing ALU OPCODE. ALU OPCODE: LESS THAN (signed operands, in this case it matters)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
SGT                  |     1     |      1      |    0    |   1  |  1   |      0      |    1   |    0   |      1      |   0   |   0   |     1     |      1      |     0       |      0    |   0   |   00   |     0    |       0   |    1   |       1    | Comments: Same as ADD but changing ALU OPCODE. ALU OPCODE: GREATER THAN (signed operands, in this case it matters)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
SLE                  |     1     |      1      |    0    |   1  |  1   |      0      |    1   |    0   |      1      |   0   |   0   |     1     |      1      |     0       |      0    |   0   |   00   |     0    |       0   |    1   |       1    | Comments: Same as ADD but changing ALU OPCODE. ALU OPCODE: LESS EQUAL THAN (signed operands, in this case it matters)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
SGE                  |     1     |      1      |    0    |   1  |  1   |      0      |    1   |    0   |      1      |   0   |   0   |     1     |      1      |     0       |      0    |   0   |   00   |     0    |       0   |    1   |       1    | Comments: Same as ADD but changing ALU OPCODE. ALU OPCODE: GREATER EQUAL THAN (signed operands, in this case it matters)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
SLTU                 |     1     |      1      |    0    |   1  |  1   |      0      |    1   |    0   |      1      |   0   |   0   |     1     |      1      |     0       |      0    |   0   |   00   |     0    |       0   |    1   |       1    | Comments: Same as ADD but changing ALU OPCODE. ALU OPCODE: LESS THAN (UNsigned operands, in this case it matters)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
SGTU                 |     1     |      1      |    0    |   1  |  1   |      0      |    1   |    0   |      1      |   0   |   0   |     1     |      1      |     0       |      0    |   0   |   00   |     0    |       0   |    1   |       1    | Comments: Same as ADD but changing ALU OPCODE. ALU OPCODE: GREATER THAN (UNsigned operands, in this case it matters)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
SLEU                 |     1     |      1      |    0    |   1  |  1   |      0      |    1   |    0   |      1      |   0   |   0   |     1     |      1      |     0       |      0    |   0   |   00   |     0    |       0   |    1   |       1    | Comments: Same as ADD but changing ALU OPCODE. ALU OPCODE: LESS EQUAL THAN (UNsigned operands, in this case it matters)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|                     
SGEU                 |     1     |      1      |    0    |   1  |  1   |      0      |    1   |    0   |      1      |   0   |   0   |     1     |      1      |     0       |      0    |   0   |   00   |     0    |       0   |    1   |       1    | Comments: Same as ADD but changing ALU OPCODE. ALU OPCODE: GREATER EQUAL THAN (UNsigned operands, in this case it matters)
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|                     
MULT                 |     1     |      1      |    0    |   1  |  1   |      0      |    1   |    0   |      1      |   0   |   0   |     1     |      1      |     0       |      0    |   0   |   00   |     0    |       0   |    1   |       1    | Comments: Same as ADD but changing ALU OPCODE. ALU OPCODE: MULT
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
MULTU                |     1     |      1      |    0    |   1  |  1   |      0      |    1   |    0   |      1      |   0   |   0   |     1     |      1      |     0       |      0    |   0   |   00   |     0    |       0   |    1   |       1    | Comments: Same as MULT. ALU OPCODE: MULTU
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
INSTRUCTION          |IF_LATCH_EN|DEC_OUTREG_EN|IS_I_TYPE|RD1_EN|RD2_EN|ZERO_PADDING2|MUXA_SEL|MUXB_SEL|EXE_OUTREG_EN|EQ_COND|JUMP_EN|PC_LATCH_EN|MEM_OUTREG_EN|ZERO_PADDING4|MEM_OUT_SEL|DRAM_WE|BYTE_LEN|WB_MUX_SEL|JAL_MUX_SEL|RF_WR_EN|WB_LATCH_EN |
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|
